% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.conv.R
\name{search.conv}
\alias{search.conv}
\title{Searching morphological convergence}
\usage{
search.conv(RR,y,nodes=NULL,min.dim=NULL,max.dim=NULL,min.dist=NULL,nsim=1000,clus=.5)
}
\arguments{
\item{RR}{an object produced by \code{\link{RRphylo}}.}

\item{y}{a multivariate dataset of phenotypic variables.}

\item{nodes}{node pair to be tested. If unspecified, the function automatically searches for converging subtrees.}

\item{min.dim}{the minimum size of the subtrees to be compared. When \code{nodes} is indicated, it coincides with the size of the smallest clades in \code{nodes}, otherwise it is set at one tenth of the tree size.}

\item{max.dim}{the maximum size of the subtrees to be compared. When \code{nodes} is indicated, it is \code{min.dim}*2 if the largest clade in \code{nodes} is smaller than this value, otherwise it corresponds to the size of the largest clade. Whitout \code{nodes} it is set at one third of the tree size.}

\item{min.dist}{the minimum distance, in terms of number of nodes, between the subtrees to be compared. When \code{nodes} is indicated, it is the distance between the pair, otherwise it is set at 10 nodes.}

\item{nsim}{number of simulations to be performed. It is set at 1000 by default.}

\item{clus}{the proportion of clusters to be used in parallel computing.}
}
\value{
A data frame including for each pair of nodes:

\strong{real.diff} the difference between the mean evolutionary direction of the tips of the respective nodes divided by squared \code{nod.dist}

\strong{diff} the difference between the mean evolutionary direction of the tips of the respective nodes plus the angle between ancestral shapes (\code{ang}), divided by squared \code{nod.dist}

\strong{ang} the angle between ancestral shapes

\strong{nod.dist} the distance in number of nodes between the focal nodes pair

\strong{p.real.diff} the p-value for \code{real.diff}

\strong{p.diff} the p-value for \code{diff}
}
\description{
The function scans a phylogenetic tree looking for morphological convergence between pairs of distant nodes. (For further details see \code{\link{evo.dir}})
}
\examples{
 \donttest{
### Tree and data preparation ###
library(RRphylo)
library(ape)
library(geiger)
library(phytools)

repeat({
  rtree(100)->tree
  sizedsubtree(tree,11)->n
  if(length(tips(tree,n))<15) break
})


setBM(tree,type="brown",nY=4)->y
y[match(tree$tip.label,rownames(y)),]->y
y[match(tips(tree,n),rownames(y)),]->a


apply(y,2,range)->m.a
m.a[2,]*.7->m.a

a1<-matrix(ncol=dim(y)[2],nrow=dim(a)[1])
for(m in 1:dim(a)[1])
{
  v<-array()
  for(i in 1:length(m.a)) jitter(m.a[i],amount=(sd(a[,i])*1))->v[i]
  v->a1[m,]
}

rownames(a1)<-rownames(a)
y[match(tips(tree,n),rownames(y)),]<-a1


extract.clade(tree,n)->t1
swapONE(t1)[[1]]->t1
drop.tip(t1,t1$tip.label[c(1,length(t1$tip.label))])->t1
t1$root.edge<-data.frame(tree$edge,tree$edge.length)[which(
  data.frame(tree$edge,tree$edge.length)[,2]==n),3]

apply(y[match(t1$tip.label,rownames(y)),],2,jitter)->y.t1


tree$tip.label<-paste("a",seq(1,Ntip(tree)),sep="")
rownames(y)<-tree$tip.label
t1$tip.label<-paste("a",seq((Ntip(tree)+1),(Ntip(tree)+Ntip(t1))),sep="")
rownames(y.t1)<-t1$tip.label


distNodes(tree,n)->dfN
dfN[which(dfN[,2]<=Ntip(tree)*0.1),1]->bar
dfN[-which(dfN[,2]<=Ntip(tree)*0.1),1]->nodN
sample(nodN,1)->tar

if(length(which(getDescendants(tree,tar)\%in\%bar))>0)
{
  getDescendants(tree,tar)->ta
  ta[which(ta\%in\%bar)]->ex
  exa<-list()
  for(w in 1:length(ex)) tips(tree,ex[i])->exa[[w]]
  unlist(exa)->exil
  tips(tree,tar)->tipper
  tipper[-which(exil\%in\%tipper)]->tipper
  sample(tipper,1)->at.tip
}else{
  sample(tips(tree,tar),1)->at.tip
}

at<-which(tree$tip.label==at.tip)
data.frame(tree$edge,tree$edge.length)[which(data.frame(tree$edge,
  tree$edge.length)[,2]==at),3]->pos
bind.tree(tree,t1,where=at,position=pos/2)->tree1
c(getMRCA(tree1,tree$tip.label[which(tree$tip.label\%in\%tips(tree,n))]),
  getMRCA(tree1,t1$tip.label))->nod.par

### nod.par is the node pair set to converge

rbind(y,y.t1)->y
RRphylo(tree1,y)->RR
length((tips(tree1,nod.par[2])))->min.dim

search.conv(RR,y,min.dim = min.dim,min.dist = NULL)

search.conv(RR,y,nodes=nod.par)

    }
}
\references{
Castiglione, S., Tesone, G., Piccolo, M., Melchionna, M., Mondanaro, A., Serio, C., Di Febbraro, M., & Raia, P.(2018). A new method for testing evolutionary rate variation and shifts in phenotypic evolution. \emph{Methods in Ecology and Evolution}, in press.doi:10.1111/2041-210X.12954
}
\author{
Pasquale Raia, Silvia Castiglione, Carmela Serio, Alessandro Mondanaro, Marina Melchionna, Mirko Di Febbraro, Antonio Profico, Francesco Carotenuto
}
